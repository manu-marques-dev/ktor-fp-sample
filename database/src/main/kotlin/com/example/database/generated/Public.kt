/*
 * This file is generated by jOOQ.
 */
package com.example.database.generated


import com.example.database.generated.sequences.ORDER_NUMBER_SEQ
import com.example.database.generated.tables.Customer
import com.example.database.generated.tables.FlywaySchemaHistory
import com.example.database.generated.tables.Order
import com.example.database.generated.tables.OrderItem
import com.example.database.generated.tables.Product

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.customer</code>.
     */
    val CUSTOMER: Customer get() = Customer.CUSTOMER

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>public.ORDER</code>.
     */
    val ORDER: Order get() = Order.ORDER

    /**
     * The table <code>public.order_item</code>.
     */
    val ORDER_ITEM: OrderItem get() = OrderItem.ORDER_ITEM

    /**
     * The table <code>public.product</code>.
     */
    val PRODUCT: Product get() = Product.PRODUCT

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        ORDER_NUMBER_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        Customer.CUSTOMER,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Order.ORDER,
        OrderItem.ORDER_ITEM,
        Product.PRODUCT
    )
}
